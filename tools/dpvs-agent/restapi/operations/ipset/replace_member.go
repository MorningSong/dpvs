// Code generated by go-swagger; DO NOT EDIT.

package ipset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ReplaceMemberHandlerFunc turns a function with the right signature into a replace member handler
type ReplaceMemberHandlerFunc func(ReplaceMemberParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ReplaceMemberHandlerFunc) Handle(params ReplaceMemberParams) middleware.Responder {
	return fn(params)
}

// ReplaceMemberHandler interface for that can handle valid replace member params
type ReplaceMemberHandler interface {
	Handle(ReplaceMemberParams) middleware.Responder
}

// NewReplaceMember creates a new http.Handler for the replace member operation
func NewReplaceMember(ctx *middleware.Context, handler ReplaceMemberHandler) *ReplaceMember {
	return &ReplaceMember{Context: ctx, Handler: handler}
}

/*
	ReplaceMember swagger:route PUT /ipset/{name}/member ipset replaceMember

Reset the whole ipset members.
*/
type ReplaceMember struct {
	Context *middleware.Context
	Handler ReplaceMemberHandler
}

func (o *ReplaceMember) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewReplaceMemberParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
