// Code generated by go-swagger; DO NOT EDIT.

package ipset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// CreateOKCode is the HTTP code returned for type CreateOK
const CreateOKCode int = 200

/*
CreateOK Replaced

swagger:response createOK
*/
type CreateOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewCreateOK creates CreateOK with default headers values
func NewCreateOK() *CreateOK {

	return &CreateOK{}
}

// WithPayload adds the payload to the create o k response
func (o *CreateOK) WithPayload(payload string) *CreateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create o k response
func (o *CreateOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// CreateCreatedCode is the HTTP code returned for type CreateCreated
const CreateCreatedCode int = 201

/*
CreateCreated Created

swagger:response createCreated
*/
type CreateCreated struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewCreateCreated creates CreateCreated with default headers values
func NewCreateCreated() *CreateCreated {

	return &CreateCreated{}
}

// WithPayload adds the payload to the create created response
func (o *CreateCreated) WithPayload(payload string) *CreateCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create created response
func (o *CreateCreated) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// CreateBadRequestCode is the HTTP code returned for type CreateBadRequest
const CreateBadRequestCode int = 400

/*
CreateBadRequest Invalid ipset parameter

swagger:response createBadRequest
*/
type CreateBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewCreateBadRequest creates CreateBadRequest with default headers values
func NewCreateBadRequest() *CreateBadRequest {

	return &CreateBadRequest{}
}

// WithPayload adds the payload to the create bad request response
func (o *CreateBadRequest) WithPayload(payload string) *CreateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create bad request response
func (o *CreateBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// CreateNotFoundCode is the HTTP code returned for type CreateNotFound
const CreateNotFoundCode int = 404

/*
CreateNotFound Ipset not found

swagger:response createNotFound
*/
type CreateNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewCreateNotFound creates CreateNotFound with default headers values
func NewCreateNotFound() *CreateNotFound {

	return &CreateNotFound{}
}

// WithPayload adds the payload to the create not found response
func (o *CreateNotFound) WithPayload(payload string) *CreateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create not found response
func (o *CreateNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// CreateFailureCode is the HTTP code returned for type CreateFailure
const CreateFailureCode int = 500

/*
CreateFailure Service not available

swagger:response createFailure
*/
type CreateFailure struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewCreateFailure creates CreateFailure with default headers values
func NewCreateFailure() *CreateFailure {

	return &CreateFailure{}
}

// WithPayload adds the payload to the create failure response
func (o *CreateFailure) WithPayload(payload string) *CreateFailure {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create failure response
func (o *CreateFailure) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateFailure) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
