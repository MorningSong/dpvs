// Code generated by go-swagger; DO NOT EDIT.

package ipset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// ReplaceMemberOKCode is the HTTP code returned for type ReplaceMemberOK
const ReplaceMemberOKCode int = 200

/*
ReplaceMemberOK Succeed

swagger:response replaceMemberOK
*/
type ReplaceMemberOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewReplaceMemberOK creates ReplaceMemberOK with default headers values
func NewReplaceMemberOK() *ReplaceMemberOK {

	return &ReplaceMemberOK{}
}

// WithPayload adds the payload to the replace member o k response
func (o *ReplaceMemberOK) WithPayload(payload string) *ReplaceMemberOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace member o k response
func (o *ReplaceMemberOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceMemberOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ReplaceMemberBadRequestCode is the HTTP code returned for type ReplaceMemberBadRequest
const ReplaceMemberBadRequestCode int = 400

/*
ReplaceMemberBadRequest Invalid ipset parameter

swagger:response replaceMemberBadRequest
*/
type ReplaceMemberBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewReplaceMemberBadRequest creates ReplaceMemberBadRequest with default headers values
func NewReplaceMemberBadRequest() *ReplaceMemberBadRequest {

	return &ReplaceMemberBadRequest{}
}

// WithPayload adds the payload to the replace member bad request response
func (o *ReplaceMemberBadRequest) WithPayload(payload string) *ReplaceMemberBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace member bad request response
func (o *ReplaceMemberBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceMemberBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ReplaceMemberNotFoundCode is the HTTP code returned for type ReplaceMemberNotFound
const ReplaceMemberNotFoundCode int = 404

/*
ReplaceMemberNotFound Ipset not found

swagger:response replaceMemberNotFound
*/
type ReplaceMemberNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewReplaceMemberNotFound creates ReplaceMemberNotFound with default headers values
func NewReplaceMemberNotFound() *ReplaceMemberNotFound {

	return &ReplaceMemberNotFound{}
}

// WithPayload adds the payload to the replace member not found response
func (o *ReplaceMemberNotFound) WithPayload(payload string) *ReplaceMemberNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace member not found response
func (o *ReplaceMemberNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceMemberNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ReplaceMemberFailureCode is the HTTP code returned for type ReplaceMemberFailure
const ReplaceMemberFailureCode int = 500

/*
ReplaceMemberFailure Service not available

swagger:response replaceMemberFailure
*/
type ReplaceMemberFailure struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewReplaceMemberFailure creates ReplaceMemberFailure with default headers values
func NewReplaceMemberFailure() *ReplaceMemberFailure {

	return &ReplaceMemberFailure{}
}

// WithPayload adds the payload to the replace member failure response
func (o *ReplaceMemberFailure) WithPayload(payload string) *ReplaceMemberFailure {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace member failure response
func (o *ReplaceMemberFailure) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceMemberFailure) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
