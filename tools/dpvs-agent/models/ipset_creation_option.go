// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IpsetCreationOption IpsetCreationOption contains all available options required in creating an ipset.
//
// swagger:model IpsetCreationOption
type IpsetCreationOption struct {

	// comment
	Comment *bool `json:"Comment,omitempty"`

	// family
	// Enum: [ipv4 ipv6]
	Family string `json:"Family,omitempty"`

	// hash max elem
	HashMaxElem uint32 `json:"HashMaxElem,omitempty"`

	// hash size
	HashSize uint32 `json:"HashSize,omitempty"`

	// vaild format: ipv4-ipv4, ipv4/pfx, ipv6/pfx, port-port
	//
	Range string `json:"Range,omitempty"`
}

// Validate validates this ipset creation option
func (m *IpsetCreationOption) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFamily(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var ipsetCreationOptionTypeFamilyPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ipv4","ipv6"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		ipsetCreationOptionTypeFamilyPropEnum = append(ipsetCreationOptionTypeFamilyPropEnum, v)
	}
}

const (

	// IpsetCreationOptionFamilyIPV4 captures enum value "ipv4"
	IpsetCreationOptionFamilyIPV4 string = "ipv4"

	// IpsetCreationOptionFamilyIPV6 captures enum value "ipv6"
	IpsetCreationOptionFamilyIPV6 string = "ipv6"
)

// prop value enum
func (m *IpsetCreationOption) validateFamilyEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, ipsetCreationOptionTypeFamilyPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *IpsetCreationOption) validateFamily(formats strfmt.Registry) error {
	if swag.IsZero(m.Family) { // not required
		return nil
	}

	// value enum
	if err := m.validateFamilyEnum("Family", "body", m.Family); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this ipset creation option based on context it is used
func (m *IpsetCreationOption) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IpsetCreationOption) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IpsetCreationOption) UnmarshalBinary(b []byte) error {
	var res IpsetCreationOption
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
